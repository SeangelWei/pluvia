package controllers;

import com.badlogic.gdx.math.Rectangle;
import model.Ball;
import model.Level;
import model.Player;
import model.Shot;

import java.util.List;

public class GamescreenController {
    Level currentLevel;
    public enum gameStateDef { paused, playing, win, gameover, ready }
    gameStateDef gameState;
    public Rectangle arrow_right;
    public Rectangle arrow_left;
    public Rectangle arrow_up;

    public GamescreenController() {
        currentLevel = new Level(0, 0);
        gameState = gameStateDef.playing;
        currentLevel.init();
        arrow_left = new Rectangle(20, 10, 80, 80);
        arrow_right = new Rectangle(120, 10, 80, 80);
        arrow_up = new Rectangle(700, 0, 80, 80);
    }

    public void update(){
        switch (gameState) {
            case playing:
                currentLevel.update();
                break;
        }
        if(getBalls().size() == 0){
            gameState = gameStateDef.win;
        }
        if (getPlayer().getLives() == 0) {
            gameState = gameStateDef.gameover;
        }
        if(getShot()!= null && getShot().position.y > 100){
            getPlayer().setShot(null);
        }
    }
    public gameStateDef getGameState(){
        return gameState;
    }
    public void setGameState(gameStateDef gameState){
        this.gameState = gameState;
    }
    public Player getPlayer() {
        return currentLevel.getPlayer();
    }
    public List<Ball> getBalls(){
        return currentLevel.getBalls();
    }
    public Shot getShot(){
        return currentLevel.getPlayer().getShot();
    }
}